<project name="Algo42" default="Menu" basedir=".">

		<description/>
		<property name="srcfuente" value="tp2-codigo-fuente/" />
		<property name="srctest" value="tp2-pruebas/" />
		<property name="build" value="bin/" />
		<property name="lib" value="lib/" />
		<property name="doc.dir" value="documentacion/javadoc" />
		<property name="zip.name" value="Tp2-Algo42.zip" />

	<path id="classpath">
		<fileset dir="${lib}">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${build}" />
	</path>

	<target name="init" depends="clean">
		<tstamp/>
	<mkdir dir="${build}"/>
	</target>
	
	<target name="clean">
	<!--Elimina la carpeta de compilaciones pasadas y la vuelve a crear-->
		<delete dir="${build}"/>
		<delete file="MANIFEST.MF"/>
	</target>
	
	<target name="compilar" depends="init" description="compila la aplicacion" >
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${srcfuente}" classpath="${classpath}" destdir="${build}">
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="compilarTest" depends="compilar" description="compila los tests" >
		<javac srcdir="${srctest}" classpath="${classpath}" destdir="${build}">
			<classpath refid="classpath" />
		</javac>
		
	</target>
	
	<target name="corrertests" depends="compilarTest">	
	<junit>
		<classpath>
			<pathelement path="${build}" />
			<fileset dir="${classpath}">
				<include name="**/*.jar"/>
			</fileset>
		</classpath>
		<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${build}" includes="**/*Test.class" />
			</batchtest>
		</junit>
	</target>
	
	<target name="compilarWork" depends="init" description="compila la aplicacion" >
		<!-- Compile the java code from ${src} into ${build} -->		
		<javac srcdir="${srcfuente}src/" classpath="${build}" destdir="${build}">
			<classpath refid="classpath" />
		</javac>
	</target>
	
	<target name="compilarTestWork" depends="compilarWork" description="compila los test" >
		<javac srcdir="${srctest}src/" classpath="${classpath}" destdir="${build}">
			<classpath refid="classpath" />
		</javac>	
	</target>
	
	<target name="corrertestsWork" depends="compilarTestWork">	
	<junit>
		<formatter type="brief" usefile="false" />
			<classpath>	
				<pathelement path="${build}" />
				<fileset dir="${classpath}">
					<include name="**/*.jar"/>
				</fileset>
			</classpath>
			<batchtest>
				<fileset dir="${build}" includes="**/*Test.class" />
			</batchtest>
		</junit>
	</target>
	
	<target name="makeJar" depends="compilar">
		<manifest file="MANIFEST.MF">
			<attribute name="Built-By" value="${Roshi}"/>
			<attribute name="Main-Class" value="Main-Class: tp2.Programa"/>
		</manifest>
		<unjar dest="${build}" src="lib/titiritero.jar"/>
		<jar destfile="release/Algo42.jar" basedir="bin" includes="**/*.class" manifest="tp2-codigo-fuente/manifiest"/>
	</target>

	<target name="correrPrograma" depends="makeJar">
		<ant target="clean"/>
		<java 
			jar="release/Algo42.jar"
			fork="true"
			/>
	</target>
	
	<target name="Menu">
		<echo>ant clean : limpia los directorios de compilaciones pasadas (No necesario en correrPrograma)</echo>
		<echo>ant compilar : compila el programa</echo>
		<echo>ant corrertests : compila el programa y corre los tests</echo>
    <echo>ant correrPrograma : genera el archivo .jar y lo ejecuta</echo>
		<echo>ant makeJar: genera un archivo .jar ejecutable del juego</echo>
		<echo>ant compilarWork : compila el programa desde la estructura del workspace</echo>
		<echo>ant corrertestsWork : compila el programa y corre los tests desde la estructura del workspace</echo>
	</target>
	
</project>